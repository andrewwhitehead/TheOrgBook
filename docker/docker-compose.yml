version: '3'
services:
  # 
  # tob-web
  # 
  tob-web:
    image: angular-on-nginx
    environment:
      - API_URL=${API_URL}
      - IpFilterRules=${IpFilterRules}
      - RealIpFrom=${RealIpFrom}
      - TOB_THEME=${TOB_THEME}
      - WEB_BASE_HREF=${WEB_BASE_HREF}
      - WEB_DEPLOY_URL=${WEB_DEPLOY_URL}
    networks:
      - tob
    ports:
      - "${WEB_HTTP_PORT}:8080"
    depends_on:
      - tob-api
    # command: npm start

  # 
  # tob-wallet
  #-------------------------------------------------
  # The Wallet provides the backend storage for the 
  # TheOrgBook Indy SDK wallet.
  #
  # We are using a simple sleep command to do this 
  # for the moment; refer to the `command` section 
  # of the configuration for details.  It would be 
  # nice to implement a more deterministic solution.
  #
  tob-wallet:
    image: tob-wallet
    environment:
      - DATABASE_SERVICE_NAME=${WALLET_DB_SERVICE_NAME}
      #- DATABASE_SERVICE_NAME=${DATABASE_SERVICE_NAME}
      - DATABASE_ENGINE=${DATABASE_ENGINE}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - TOB_WALLET_DB_SERVICE_HOST=${WALLET_DB_SERVICE_NAME}
      - TOB_WALLET_DB_SERVICE_PORT=5432
      #- TOB_DB_SERVICE_HOST=${DATABASE_SERVICE_NAME}
      #- TOB_DB_SERVICE_PORT=5432
      - WALLET_USER_ID=${WALLET_USER_ID}
      - WALLET_USER_PASSWORD=${WALLET_USER_PASSWORD}
      - WALLET_ADMIN_USER_ID=${WALLET_ADMIN_USER_ID}
      - WALLET_ADMIN_PASSWORD=${WALLET_ADMIN_PASSWORD}
      - STI_SCRIPTS_PATH=${STI_SCRIPTS_PATH}
      - WEB_CONCURRENCY=${WEB_CONCURRENCY}
      - RUST_LOG=${RUST_LOG}
      - RUST_BACKTRACE=${RUST_BACKTRACE}
    volumes:
      - ../tob-wallet/api:/opt/app-root/src/api
    networks:
      - wallet-tob
      - wallet-db
    ports:
      - "${WALLET_HTTP_PORT}:8080"
    depends_on:
      - tob-db
      - tob-wallet-db
    command: >
      /bin/bash -c "
        echo sleeping ...;
        sleep 12;
        ${STI_SCRIPTS_PATH}/run;"

  # 
  # tob-api
  #-------------------------------------------------
  # The API performs the migrations on the database
  # and updates the indexes in Solr.  Therefore
  # it needs to come up after the database and 
  # and Solr services have had time to fully
  # initialize.
  #
  #
  # We are using a simple sleep command to do this 
  # for the moment; refer to the `command` section 
  # of the configuration for details.  It would be 
  # nice to implement a more deterministic solution.
  #
  tob-api:
    image: django
    environment:
      - DATABASE_SERVICE_NAME=${DATABASE_SERVICE_NAME}
      - DATABASE_ENGINE=${DATABASE_ENGINE}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DEBUG=${DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_LOG_LEVEL=${DJANGO_LOG_LEVEL}
      - SOLR_SERVICE_NAME=${SOLR_SERVICE_NAME}
      - SOLR_CORE_NAME=${SOLR_CORE_NAME}
      - TOB_DB_SERVICE_HOST=${DATABASE_SERVICE_NAME}
      - TOB_DB_SERVICE_PORT=5432
      - TOB_SOLR_SERVICE_HOST=${SOLR_SERVICE_NAME}
      - TOB_SOLR_SERVICE_PORT=8983
      - INDY_WALLET_SEED=${INDY_WALLET_SEED}
      - LEDGER_URL=${LEDGER_URL}
      - INDY_WALLET_TYPE=${INDY_WALLET_TYPE}
      - INDY_WALLET_URL=${INDY_WALLET_URL}
      - WALLET_USER_ID=${WALLET_USER_ID}
      - WALLET_PASSWORD=${WALLET_USER_PASSWORD}
      - STI_SCRIPTS_PATH=${STI_SCRIPTS_PATH}
      - WEB_CONCURRENCY=${WEB_CONCURRENCY}
      - RUST_LOG=${RUST_LOG}
      - RUST_BACKTRACE=${RUST_BACKTRACE}
    volumes:
      - ../tob-api/api:/home/indy/api
      - ../tob-api/api_v2:/home/indy/api_v2
    networks:
      - wallet-tob
      - tob
    ports:
      - "${API_HTTP_PORT}:8080"
      - 3000:3000
    depends_on:
      - tob-db
      - tob-wallet
      - tob-solr
    command: >
      /bin/bash -c "
        echo sleeping ...;
        sleep 20;
        if [ $DEBUG ] && [ "$DEBUG" == "true" ]; then
          python manage.py migrate && python manage.py runserver --nothreading 0.0.0.0:8080;
        else
          ${STI_SCRIPTS_PATH}/run;
        fi"

  # 
  # schema-spy
  #-------------------------------------------------
  # Needs to wait for the schema to be created/migrated
  # by the API server; it's not enough to wait for the
  # database to be available.
  #
  # We are using a simple sleep command to do this 
  # for the moment; refer to the `command` section 
  # of the configuration for details.  It would be 
  # nice to implement a more deterministic solution.
  #
  schema-spy:
    image: schema-spy
    environment:
      - DATABASE_SERVICE_NAME=${DATABASE_SERVICE_NAME}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
    networks:
      - tob
    ports:
      - 8082:8080
    depends_on:
      - tob-db
    command: >
      /bin/sh -c "
        echo sleeping ...;
        sleep 20;
        ./start.sh;"
    
  # 
  # tob-solr
  # 
  tob-solr:
    image: solr
    environment:
      - CORE_NAME=${CORE_NAME}
    networks:
      - tob
    ports:
      - 8983:8983

  # 
  # tob-db
  # 
  tob-db:
    image: registry.access.redhat.com/rhscl/postgresql-95-rhel7:9.5
    environment:
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
    networks:
      - tob
    ports:
      - 5432:5432
    volumes:
      - tob-data:/var/lib/pgsql/data     

  # 
  # tob-wallet-db
  # 
  tob-wallet-db:
    image: registry.access.redhat.com/rhscl/postgresql-95-rhel7:9.5
    environment:
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
    networks:
      - wallet-db
    ports:
      - "8032:5432"
    volumes:
      - tob-wallet-data:/var/lib/pgsql/data     

networks:
  tob:
  wallet-db:
  wallet-tob:

volumes:
  tob-data:
  tob-wallet-data: